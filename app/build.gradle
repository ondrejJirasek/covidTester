plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id("androidx.navigation.safeargs.kotlin")
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdk 31
    buildToolsVersion "29.0.3"

    def versionPropsFile = file('version.properties')
    def versionBuild

    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }
    ext.autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }


    defaultConfig {
        applicationId "com.nvsp.covidtester"
        minSdk 24
        targetSdk 31
        versionCode 1
        versionName "1.0 build("+versionBuild+")"
        def date = new Date()
        def formattedDate = date.format('dd-MM-yyyy_HH-mm')
        archivesBaseName = "CovidTester" + versionName + "_" + formattedDate
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental": "true"]
            }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
        gradle.taskGraph.whenReady {taskGraph ->
            if (taskGraph.hasTask(assembleDebug)) {  /* when run debug task */
                autoIncrementBuildNumber()
            } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
                autoIncrementBuildNumber()
            }
        }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }

}
dependencies {
    implementation project(':NvmesAppLibrary')

    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Lottie Animation
    implementation 'com.airbnb.android:lottie:3.4.0'
//  Koin DI
    def koin_version= "3.2.0-beta-1"
    implementation "io.insert-koin:koin-core:$koin_version"
// Koin Test features
    testImplementation "io.insert-koin:koin-test:$koin_version"
    implementation "io.insert-koin:koin-android:$koin_version"
// No more koin-android-viewmodel, koin-android-scope, koin-android-fragment

// Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
// Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
// Navigation Graph
    implementation "io.insert-koin:koin-androidx-navigation:$koin_version"
// Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
// End Koin
// End Koin
    // Room
    // implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    // implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.room:room-ktx:2.4.2'

    kapt "androidx.room:room-compiler:2.3.0"
    implementation 'androidx.room:room-runtime:2.3.0'

    //debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'
// End room
    /* implementation 'com.squareup.retrofit2:retrofit:2.9.0'
     implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
     implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
     implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'*/
    //Volley
    implementation("com.android.volley:volley:1.2.1")
    //GSON
    implementation 'com.google.code.gson:gson:2.8.8'

    //implementation 'com.amitshekhar.android:debug-db:1.0.6'

    kapt "com.android.databinding:compiler:$android_plugin_version"
}